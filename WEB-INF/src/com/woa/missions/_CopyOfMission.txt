package com.woa.missions;

import java.util.ArrayList;

import org.jbox2d.common.Vec2;
import org.jbox2d.dynamics.contacts.ContactPoint;

import sun.security.krb5.internal.an;

import woaobject.WOAObject;
import woaobject.pheromone.Pheromone;
import woaobject.track.Track;
import ant.Ant;

public class CopyOfMission {
	public Ant ant;
	public int state;
	public WOAObject target = null;
	public Integer target_id = 0;
	public int carry_tentative = 0;
	public boolean piste_completed = false;
	public Pheromone firstPheromone = null;
	public Pheromone homePheromone = null;
	public Pheromone currentPheromone = null;
	public float rememberdTargetFood = 0;
	public Track targetTrack;
	
	public CopyOfMission(Ant _ant, WOAObject _target)
	{
		ant = _ant;
		state = 1;
		target = _target;
		carry_tentative = 0;
		piste_completed = false;
		if (target != null)
		{
			target_id = target.id;
		}
		//System.out.println("missions added for the ant");
	}
	
	/**
	 * When the ant collide with the colony
	 */
	public void collisionWithColony()
	{

		// give the food to the Colony
		ant.getColony().adn.increase("storage_food", ant.adn.getCurrent("storage_food"));
		// release ant's storage_food area
		ant.adn.updateCurrent("storage_food", 0);
		
		/*
		if (target != null)
		{		
			//System.out.println("going to target, colony reached : " + homePheromone);
			
			
			currentPheromone = homePheromone;
			// if target still there, run back to it
			state = 4;
		}
		else
		{
			// go back roaming
			state = 0;
		}*/
		if (homePheromone != null)
		{
			currentPheromone = homePheromone;
			state = 4;
		}
		else
		{
			ant.currentMission = null;
			//state = 0;
		}
		
		System.out.println("collide with home + " + toString());
		System.out.println("home pheromone : " + homePheromone);
		if (piste_completed == false)
		{
			//System.out.println("piste completed : " + toString());
			piste_completed = true;
			//homePheromone = currentPheromone;
		}
		
	}
	
	public void endMission()
	{
		//System.out.println("ending mission");
		// remove target if there is no more food
		target = null;
		// release the mandible...
		
		rememberdTargetFood = 0;
		ant.releaseMandible();
		// go back to colony
		
		if (firstPheromone != null)
		{
			currentPheromone = firstPheromone;
			state = 3;	
		}
		else
		{
			System.out.println("no more pheromone when finish mission");
			ant.currentMission = null;
			// go back on roaming			
			state = 0;			
		}

		
		if (ant.adn.getCurrent("storage_food") / ant.adn.getMax("storage_food") > 0.5f)
		{ // if the ant has more than of half of his capacity go back home
			// go back to colony
//			currentPheromone = firstPheromone;
//			state = 3;
		}
		else
		{
			// no more current mission
//			ant.currentMission = null;
			// go back on roaming			
//			state = 0;
		}
		
	}
	
	public WOAObject collisionWithTarget(WOAObject other, ContactPoint cp)
	{
		// check if the ant collide with his mission target 
		if (other == null) return null;
		if (target == null) return null;
		if (target.equals(other))
		{
			//System.out.println("collision avec : " + other.toString());
			if (other.type.equals("food"))
			{
				// catch the food with the ant mandible
				ant.catchWithMandible(other, cp.position);
				// if there is no track create the new one
				if (targetTrack != null)
				{
					targetTrack = new Track(ant.world, other);
				}
				return other;
			}		
		}

		return null;			
	}
	
	
	public void whatToDo()
	{
		try 
		{
			//System.out.println("current mission state : " + state);
			switch (state)
			{
				case 0 : //roaming
					//System.out.println("roaming");
					//ant.roam();
					// search for food
					//target = ant.searchForFood();
					if (target == null)
					{
						endMission();
						//go to the target
						//state = 1;
					}
				break;
				case 1 : // go to the food
					//System.out.println("ant leaving : " + ant.adn.toString("storage_food"));
					// move to target
					if (ant.MoveToWOAObject(target) == null)
					{
						//target = ant.getColony();					
						System.out.println("no more target on this mission, go home");
						endMission();
						//target = null;
						//state = 3;
						//currentPheromone = firstPheromone;
						
					}	
					else
					{// target still exists

						//System.out.println("moving to target : " + target.toString());
												
						// if ant has catch something
						if (ant.mandible != null)
						{
							// what the ant has catch ?
							WOAObject food = (WOAObject)ant.mandible.m_body2.getUserData();
							// eat some
							ant.eatFood(food);
							//System.out.println("ant ate: " + ant.adn.toString("storage_food"));
							
						}
						if (target.adn.isEmpty("storage_food"))
						{
							//System.out.println("no more target on this mission ! ");
							endMission();
							//target = null;
							//state = 2;
						}												
						// if ant has no more room
						if (ant.adn.hasMax("storage_food"))
						{
							//System.out.println("ant has max storage! : " + ant.toString());
							// go back home
							/*
							if (piste_completed == true) // follow the piste
							{
								currentPheromone = firstPheromone;
								state = 3;
							}
							else // no piste exists
							{
								state = 2;	
							}
							*/							
							currentPheromone = firstPheromone;
							state = 3;

							ant.releaseMandible();
						}
						if (target == null)
						{
							rememberdTargetFood = 0;
						}
						else
						{
							rememberdTargetFood = target.adn.getCurrent("storage_food");
						}												
					}
					// no more food place for storing
/*
					if (ant.adn.hasMax("storage_food"))
					{
						//target = ant.getColony();
						// go back home
						state = 2;
						//if ()
					}
*/
					//else
					{
						//System.out.println("ant stomac still have place : " + ant.adn.toString("storage_food"));
					}
				break;
				case 2 : //go back home
					ant.MoveToWOAObject(ant.getColony());
					// ant has something in the mandible
					if (ant.mandible != null)
					{
						// the target is still here
						if (target != null)
						{							
							WOAObject food = (WOAObject)ant.mandible.m_body2.getUserData();
							//ant.eatFood(food);
							
							Vec2 j = food.myBody.getPosition().sub(ant.myBody.getPosition());
							Float angle_r = j.calculateAngle();
							//System.out.println("angle : " + angle_r);
							ant.setBodyAngle(angle_r);
							
							if (ant.seeColony(ant.getColony()))
							{ // if see the colony while having something in the mandible, release it
								ant.releaseMandible();
							}
							else
							{ 
								if (carry_tentative > 10)
								{
									//System.out.println("food velocity length: " + food.myBody.m_linearVelocity.length());
									if (food.myBody.m_linearVelocity.length() < 0.005)
									{										
										ant.releaseMandible();
										carry_tentative = 0;
									}
								}
								carry_tentative++;
							}
						}
						else
						{ // if no more target end mission
							endMission();
						}
					}
					else
					{
						//System.out.println("mandible is null");
					}
					if (target != null)
					{
						if (ant.mandible != null) break;
						if (piste_completed == false)
						{
							//System.out.println("colony distance : " + ant.getDistance(ant.getColony()));
							if (ant.getDistance(ant.getColony()) > 30)
							{								
								if (ant.lifestep % 45 == 0)
								{
									//Pheromone p = new Pheromone(ant.world, ant.getPos(), currentPheromone);
									Pheromone p = new Pheromone(ant.world, ant.getPos());
									//p.mission = this;
									p.motivation.put(target.id, rememberdTargetFood);
									//p.lastPheromone = lastPheromone;
									
									if (currentPheromone != null)
									{	// set the home pheromone of last pheromone
										currentPheromone.homePheromone = p;
									}
									// set the first pheromone
									if (firstPheromone == null)
									{
										firstPheromone = p;
										//lastPheromone = p;
									}
									homePheromone = p;
									ant.world.addPheromone(p);	
									currentPheromone = p;									
								}										
							}
					
						}
					}
				break;
				case 3 : // follow pheromones to the home
					
					if (currentPheromone == null)
					{
						// home reached, go to it
						//System.out.println("home reached");
						state = 2;
						break;	
					}
					
					if (ant.getDistance(currentPheromone) < 30)
					{
						// update pheromone motivation list
						
						setMotivation(currentPheromone.mission.target, rememberdTargetFood);
						currentPheromone = currentPheromone.homePheromone;	
					}
					ant.MoveToWOAObject(currentPheromone);
										
				break;
				case 4 : // follow pheromones to the target

					if (currentPheromone == null)
					{ // traget has been reached, last pheromone before it
						//System.out.println("current pheromone is null, go to target directly");
						
						
						
						state = 1;
						break;
						/*
						if (target == null)
						{
							endMission();
							//state = 3;
							
						}
						else
						{
							// ho to target
							state = 1;	
						}						
						break;
						*/
					}
					if (ant.getDistance(currentPheromone) < 30)
					{
						currentPheromone = currentPheromone.targetPheromone;
					}
					ant.MoveToWOAObject(currentPheromone);					
				break;				
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
	}
	
	public void setMotivation(WOAObject target, float motivation)
	{
		//if (target == null)
		currentPheromone.motivation.put(target_id, motivation);
		
		System.out.println("reached pheromone with motivation : " + currentPheromone.getMotivationMax());
		if (currentPheromone.getMotivationMax() == 0)
		{
			currentPheromone.addToGarbage();
			System.out.println("delete this : " + currentPheromone);
			// set the mission's home pheromone to null, if it's deleted
			if (homePheromone == currentPheromone)
			{
				homePheromone = null;
			}
			//currentPheromone = null;
		}
		
	}
	
	public CopyOfMission clone(Ant a)
	{
		
		//Mission m = new Mission(a); 
		//m.target = target;
		// go to target
		//m.state = 1;
		return null;
	}
	
	public String toString()
	{
		String s = "";
		if (target != null)
		{
			 s += "Mission : STATE[" + state + "], TARGET : " + target.toString();
		}
		else
		{
			s += "Mission : STATE[" + state + "], TARGET : null";
		}
		return s;
	}
	
}
